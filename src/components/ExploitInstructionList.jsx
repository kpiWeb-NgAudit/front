// src/components/ExploitInstructionList.jsx
import React from 'react';

const ExploitInstructionList = ({ instructions, onEdit, onDelete, loading, error }) => {
    if (loading) return <p>Loading exploit instructions...</p>;
    if (error) return <p className="error-message">Error loading instructions: {error}</p>;

    if (!instructions || instructions.length === 0) {
        return <p>No exploit instructions defined for this customer yet.</p>;
    }

    const displayBool = (value) => value ? "Yes" : "No";

    return (
        <div className="exploit-instruction-list-container">
            <table>
                <thead>
                <tr>
                    <th>ID</th>
                    <th>Type</th>
                    <th>Place</th>
                    <th>Order</th>
                    <th>Active</th>
                    <th>Object/Message</th>
                    <th>Actions</th>
                </tr>
                </thead>
                <tbody>
                {instructions.map((inst) => (
                    // Use the correct casing for the primary key property from your API response
                    <tr key={inst.expInsIdPk || inst.ExpInsIdPk || inst.expIns_id_pk}> {/* Try common casings */}
                        <td>{inst.expInsIdPk || inst.ExpInsIdPk || inst.expIns_id_pk}</td>
                        <td>{inst.expInsType || inst.ExpInsType || inst.expIns_type}</td>
                        <td>{inst.expInsSpePlace || inst.ExpInsSpePlace || inst.expIns_speplace}</td>
                        <td>{inst.expInsSortOrder || inst.ExpInsSortOrder || inst.expIns_sortorder}</td>
                        <td>{displayBool(inst.expInsActive !== undefined ? inst.expInsActive : (inst.ExpInsActive !== undefined ? inst.ExpInsActive : inst.expIns_active))}</td>
                        <td title={inst.expInsObjectMessage || inst.ExpInsObjectMessage || inst.expIns_objectmessage} style={{maxWidth: '200px', whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis'}}>
                            {inst.expInsObjectMessage || inst.ExpInsObjectMessage || inst.expIns_objectmessage}
                        </td>
                        <td className="actions">
                            <button className="secondary" onClick={() => onEdit(inst)}>Edit</button>
                            <button className="danger" onClick={() => onDelete(inst.expInsIdPk || inst.ExpInsIdPk || inst.expIns_id_pk)}>Delete</button>
                        </td>
                    </tr>
                ))}
                </tbody>
            </table>
        </div>
    );
};

export default ExploitInstructionList;